
server:
  maxHttpHeaderSize: 102400
  port: 9202
management:
  endpoints:
    web.exposure.include: metrics
    web:
      exposure:
        include: "*"
  server:
    port: 9502

spring:
  application:
    name: micoserice-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
      # AfterRoutePredicateFactory: 请求时间满足在配置时间之后
      # BeforeRoutePredicateFactory: 请求时间满足在配置时间之前
      # BetweenRoutePredicateFactory: 请求时间满足在配置时间之间
#      - id: after_route
#        uri: http://httpbin.org:80/get
#        filters:
#        - AddRequestHeader=X-Request-Foo, Bar
#        predicates: # 这里遵循契约大于配置的思想
#        - After=2020-01-20T17:42:47.789-07:00[America/Denver]
#
#      # HeaderRoutePredicateFactory: 请求指定Header正则匹配指定值
#      - id: header_route
#        uri: http://httpbin.org:80/get
#        predicates:
#        - Header=X-Request-Id, \d+
#
#      # CookieRoutePredicateFactory: 请求指定Cookie正则匹配指定的值
#      - id: header_route
#        uri: http://httpbin.org:80/get
#        predicates:
#        - Cookie=name,test
#
#      # HostRouterPredicateFactory: 请求Host匹配指定值
#      - id: host_route
#        uri: http://httpbin.org:80/get
#        predicates:
#        - Host=**.fangzhipeng.com
#
#      # MethodRoutePredicateFactory: 请求Method匹配配置的method
#      - id: method_route
#        uri: http://httpbin.org:80/get
#        predicates:
#        - Method=GET
#
#      # PathRoutePredicateFactory: 请求路径正则匹配指定值 ，。请求path校验条件
#      - id: path_route
#        uri: http://httpbin.org:80/get
#        predicates:
#        - Path=/foo/{segment}
#
#      # QueryRoutePredicateFactory: 请求查询参数正则匹配指定值，。请求查询参数校验指定值
#      - id: query_route
#        uri: http://httpbin.org:80/get
#        predicates:
#        - Query=foo, ba.
#
## Filter 过滤
## SpringCloud Gateway内置了19种强大的过滤器工厂，能够满足很多场景需求。
#      # 路径重写：这里的配置中，所有以/foo/**开始的路径，都会命中该router，并执行过滤的逻辑。这里配置了RewritrPath
#      #          过滤工厂，该工厂会将/foo/(?.*)重写为${segment},然后转发到https://blog.csdn.net。
#      - id: rewritepath_route
#        uri: https://blog.csdn.net
#        predicates:
#        - Path=/foo/**
#        filters:
#        - RewritePath=/foo/(?<segment>.*), /$\{segment}
#
#      # 配置文件种使用自定义的过滤器工厂
#      - id: elapse_route
#        uri: http://httpbin.org:80/get
#        filters:
#        - RequestTime=false
#        predicates:
#        - After=2017-01-20T17:42:47.789-07:00[America/Denver]

      # 服务路由
      - id: service-hi
        uri: lb://SERVICE-HI
        predicates:
        - Path=/demo/**
        filters:
        - StripPrefix=1
eureka:
  instance:
    preferIpAddress: true
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 15
  client:
    serviceUrl:
      defaultZone: ${CLOUD_EUREKA_DEFAULT_ZONE}


#---------------------OAuth2---------------------
security:
  oauth2:
    client:
      access-token-uri: http://localhost:${server.port}/auth/oauth/token
      user-authorization-uri: http://localhost:${server.port}/auth/oauth/authorize
      client-id: web
    resource:
      user-info-uri:   http://uaa/user
      prefer-token-info: false
      loadBalanced: true












